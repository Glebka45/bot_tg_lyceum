import os
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –¢–æ–∫–µ–Ω—ã (–≤–∞—à–∏ –∑–Ω–∞—á–µ–Ω–∏—è)
BOT_TOKEN = "7920203153:AAHyEVeHPWU-vwoYviguKUk7IWJdsNdQSik"
OMDB_API_KEY = "dd60521"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("üé¨ –ö–∏–Ω–æ-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –ø–æ–∏—Å–∫—É! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤)
@dp.message()
async def search_movie(message: types.Message):
    movie_title = message.text
    url = f"http://www.omdbapi.com/?apikey={OMDB_API_KEY}&t={movie_title}"
    
    try:
        response = requests.get(url)
        data = response.json()
        
        if data.get("Response") == "True":
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ
            info = (
                f"üé• <b>{data.get('Title', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}</b> ({data.get('Year', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')})\n"
                f"‚≠ê <b>IMDb:</b> {data.get('imdbRating', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}\n"
                f"üé≠ <b>–ñ–∞–Ω—Ä:</b> {data.get('Genre', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}\n"
                f"üìÖ <b>–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:</b> {data.get('Released', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}\n"
                f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {data.get('Plot', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if data.get("Poster") and data["Poster"] != "N/A":
                await message.answer_photo(
                    photo=data["Poster"],
                    caption=info,
                    parse_mode="HTML"
                )
            else:
                await message.answer(info, parse_mode="HTML")
        else:
            await message.answer("–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
            
    except Exception as e:
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
    
